services:
  app:
    build:
      context: .
      target: development
    volumes:
      - .:/app
      - app_node_modules:/app/node_modules # Mount a named volume for node_modules
    ports:
      - "5173:5173"
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - VITE_FORCE_POLLING=true
      - CHOKIDAR_USEPOLLING=true
      # Explicitly pass Firebase environment variables
      - VITE_API_BASE_URL=${VITE_API_BASE_URL}
      - VITE_FIREBASE_API_KEY=${VITE_FIREBASE_API_KEY}
      - VITE_FIREBASE_AUTH_DOMAIN=${VITE_FIREBASE_AUTH_DOMAIN}
      - VITE_FIREBASE_PROJECT_ID=${VITE_FIREBASE_PROJECT_ID}
      - VITE_FIREBASE_STORAGE_BUCKET=${VITE_FIREBASE_STORAGE_BUCKET}
      - VITE_FIREBASE_MESSAGING_SENDER_ID=${VITE_FIREBASE_MESSAGING_SENDER_ID}
      - VITE_FIREBASE_APP_ID=${VITE_FIREBASE_APP_ID}
      - VITE_FIREBASE_MEASUREMENT_ID=${VITE_FIREBASE_MEASUREMENT_ID}
      - VITE_FIREBASE_VAPID_KEY=${VITE_FIREBASE_VAPID_KEY}
    command: npm run dev -- --host

  prod:
    build:
      context: .
      target: production
    ports:
      - "8080:80"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    # For a typical SPA, the 'prod' service serves static files
    # and doesn't usually depend on the 'app' (development) service being running.
    # Removing depends_on here to avoid potential circular dependencies or unnecessary waits.
    # If 'prod' specifically needs 'app' to be up for some reason, you can add it back.
    # depends_on:
    #   - app
    restart: unless-stopped

volumes:
  app_node_modules: # Define the named volume here
